" ~/.vim/sessions/panda.vim:
" Vim session script.
" Created by session.vim 2.6.4 on 26 September 2014 at 14:31:52.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'ir_black' | colorscheme ir_black | endif
call setqflist([{'lnum': 141, 'col': 7, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': 'app/controllers/financing_applications_controller.rb', 'text': '  def start_document_process'}, {'lnum': 37, 'col': 59, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': 'app/views/financing_applications/summary.html.erb', 'text': '  <%= button_to t(''financing_application.start_process''), start_document_process_program_financing_application_path(@program, @fin_app), :class => ''button expand'' %>'}])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/src/RF/rpace/panda
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +144 app/controllers/financing_applications_controller.rb
badd +7 features/user/loan_processor/confirm_address_eligibility.feature
badd +2824 coverage/index.html
badd +6 features/user/loan_processor/confirm_address_eligibility_autocomplete.feature
badd +64 features/step_definitions/address_eligibility_steps.rb
badd +4 app/views/notes/_show.html.erb
badd +2 app/views/notes/_form.html.erb
badd +1 app/views/layouts/application.html.erb
badd +3 app/views/financing_applications/_notes.html.erb
badd +18 app/views/layouts/application_wizard.html.erb
badd +8 app/views/financing_applications/index.html.erb
badd +12 config/locales/en.yml
badd +59 config/deploy.rb
badd +2 config/deploy/staging.rb
badd +1 app/models/financing_application.rb
argglobal
silent! argdel *
edit app/models/financing_application.rb
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 63 + 38) / 76)
exe '2resize ' . ((&lines * 10 + 38) / 76)
argglobal
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=4
setlocal fml=1
setlocal fdn=20
setlocal fen
33
silent! normal! zo
let s:l = 142 - ((38 * winheight(0) + 31) / 63)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
142
normal! 015|
wincmd w
argglobal
enew
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 63 + 38) / 76)
exe '2resize ' . ((&lines * 10 + 38) / 76)
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

2wincmd w
tabnext 1
let s:bufnr_save = bufnr("%")
let s:cwd_save = getcwd()
cwindow
if !getbufvar(s:bufnr_save, '&modified')
  let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:bufnr_save
  endif
endif
execute "cd" fnameescape(s:cwd_save)
1resize 63|vert 1resize 272|2resize 10|vert 2resize 272|
2wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
